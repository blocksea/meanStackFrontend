{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PasswordService {\n  getPassword(id) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://password-manager-d3bj.onrender.com'; // Represents the API endpoint for passwords\n  }\n\n  getAllPasswords() {\n    return this.http.get(`${this.apiUrl}/passwords`); // Retrieves all passwords from the API\n  }\n\n  getPasswordById(id) {\n    return this.http.get(`${this.apiUrl}/password-edit/${id}`); // Retrieves a password by ID from the API\n  }\n\n  addPassword(password) {\n    return this.http.post(`${this.apiUrl}/passwords-edit`, password); // Adds a new password to the API\n  }\n\n  updatePassword(id, password) {\n    return this.http.put(`${this.apiUrl}/passwords-edit/${id}`, password); // Updates a password by ID in the API\n  }\n\n  deletePassword(id) {\n    return this.http.delete(`${this.apiUrl}/passwords/${id}`); // Deletes a password by ID from the API\n  }\n}\n\nPasswordService.ɵfac = function PasswordService_Factory(t) {\n  return new (t || PasswordService)(i0.ɵɵinject(i1.HttpClient));\n};\nPasswordService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PasswordService,\n  factory: PasswordService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAC1BC,WAAW,CAACC,EAAU;IACpB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAGAC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,4CAA4C,CAAC,CAAC;EAEvB;;EAExCC,eAAe;IACb,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,GAAG,IAAI,CAACC,MAAM,YAAY,CAAC,CAAC,CAAC;EAChE;;EAEAC,eAAe,CAACP,EAAU;IACxB,OAAO,IAAI,CAACG,IAAI,CAACE,GAAG,CAAW,GAAG,IAAI,CAACC,MAAM,kBAAkBN,EAAE,EAAE,CAAC,CAAC,CAAC;EACxE;;EAEAQ,WAAW,CAACC,QAAkB;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACJ,MAAM,iBAAiB,EAAEG,QAAQ,CAAC,CAAC,CAAC;EACpE;;EAEAE,cAAc,CAACX,EAAU,EAAES,QAAkB;IAC3C,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAC,GAAG,IAAI,CAACN,MAAM,mBAAmBN,EAAE,EAAE,EAAES,QAAQ,CAAC,CAAC,CAAC;EACzE;;EAEAI,cAAc,CAACb,EAAU;IACvB,OAAO,IAAI,CAACG,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACR,MAAM,cAAcN,EAAE,EAAE,CAAC,CAAC,CAAC;EAC7D;;;AA1BWF,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAiB,SAAfjB,eAAe;EAAAkB,YAFd;AAAM","names":["PasswordService","getPassword","id","Error","constructor","http","getAllPasswords","get","apiUrl","getPasswordById","addPassword","password","post","updatePassword","put","deletePassword","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\tuk\\Documents\\Uni-Due\\SS23\\AWT\\MEAN-stack-presentation\\HandsOnSession\\meanStackFrontend\\src\\app\\password-store.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Password } from './password.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PasswordService {\r\n  getPassword(id: number) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  private apiUrl = 'https://password-manager-d3bj.onrender.com'; // Represents the API endpoint for passwords\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllPasswords(): Observable<Password[]> {\r\n    return this.http.get<Password[]>(`${this.apiUrl}/passwords`); // Retrieves all passwords from the API\r\n  }\r\n\r\n  getPasswordById(id: string): Observable<Password> {\r\n    return this.http.get<Password>(`${this.apiUrl}/password-edit/${id}`); // Retrieves a password by ID from the API\r\n  }\r\n\r\n  addPassword(password: Password): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/passwords-edit`, password); // Adds a new password to the API\r\n  }\r\n\r\n  updatePassword(id: string, password: Password): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}/passwords-edit/${id}`, password); // Updates a password by ID in the API\r\n  }\r\n\r\n  deletePassword(id: string): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/passwords/${id}`); // Deletes a password by ID from the API\r\n  }\r\n}\r\n// Comment explanations:\r\n// The code represents a service for managing passwords.\r\n// It imports necessary dependencies from Angular core, including HttpClient and Observable.\r\n// The @Injectable decorator allows the service to be injected as a dependency.\r\n// The apiUrl variable represents the base URL for the passwords API endpoint.\r\n// The constructor injects the HttpClient service for making HTTP requests.\r\n// The getAllPasswords() method retrieves all passwords from the API.\r\n// The getPasswordById() method retrieves a password by its ID from the API.\r\n// The addPassword() method adds a new password to the API.\r\n// The updatePassword() method updates an existing password in the API.\r\n// The deletePassword() method deletes a password by its ID from the API.\r\n// The getPassword() method is not implemented and throws an error.\r\n// Overall, this code provides methods to interact with the passwords API for CRUD operations."]},"metadata":{},"sourceType":"module","externalDependencies":[]}